diff --git a/CMakeLists.txt b/CMakeLists.txt
index bc95660..821b788 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,6 +13,8 @@ endif()
 #endif()
 project(mamba)
 
+set(CMAKE_PREFIX_PATH "$ENV{CONDA_PREFIX}/Library/share/vcpkg/installed/x64-windows-static/")
+
 set(MAMBA_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
 set(MAMBA_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
 
@@ -69,53 +71,55 @@ find_package(OpenSSL REQUIRED)
 find_package(nlohmann_json REQUIRED)
 
 if (STATIC_DEPENDENCIES)
+
+
     set(MAMBA_DEPENDENCIES_LIBS
-        libcurl.a
-        libssh2.a
+        # libcurl.a
+        # libssh2.a
 
-        libgssapi_krb5.a
-        libkrb5.a
-        libk5crypto.a
-        libkrb5support.a
-        libcom_err.a
+        # libgssapi_krb5.a
+        # libkrb5.a
+        # libk5crypto.a
+        # libkrb5support.a
+        # libcom_err.a
 
-        libssl.a
-        libcrypto.a
+        # libssl.a
+        # libcrypto.a
 
-        libarchive.a
+        # libarchive.a
 
-        libiconv.a
-        libbz2.a
-        liblz4.a
-        libzstd.a
-        libz.a
-        liblzma.a
-        liblzo2.a
+        # libiconv.a
+        # libbz2.a
+        # liblz4.a
+        # libzstd.a
+        # libz.a
+        # liblzma.a
+        # liblzo2.a
 
-        libsolv.a
-        libsolvext.a
+        # libsolv.a
+        # libsolvext.a
 
-        libnghttp2.a
+        # libnghttp2.a
     )
 
-    if (APPLE)
-        set (MAMBA_FORCE_DYNAMIC_LIBS resolv)
-        set(FINAL_LIBS "")
-        foreach(LIB ${MAMBA_DEPENDENCIES_LIBS})
-            set(TMP_LIB "TMP_LIB-NOTFOUND")
-            find_library(TMP_LIB "${LIB}")
-            list(APPEND FINAL_LIBS "${TMP_LIB}")
-        endforeach(LIB)
-        set (MAMBA_DEPENDENCIES_LIBS "${FINAL_LIBS}")
-    elseif (UNIX)
-        set(MAMBA_FORCE_DYNAMIC_LIBS rt dl resolv)
-    endif()
-
-    if (APPLE)
-        add_link_options(-static-libstdc++)
-    elseif (UNIX)
-        add_link_options(-static-libstdc++ -static-libgcc)
-    endif ()
+    # if (APPLE)
+    #     set (MAMBA_FORCE_DYNAMIC_LIBS resolv)
+    #     set(FINAL_LIBS "")
+    #     foreach(LIB ${MAMBA_DEPENDENCIES_LIBS})
+    #         set(TMP_LIB "TMP_LIB-NOTFOUND")
+    #         find_library(TMP_LIB "${LIB}")
+    #         list(APPEND FINAL_LIBS "${TMP_LIB}")
+    #     endforeach(LIB)
+    #     set (MAMBA_DEPENDENCIES_LIBS "${FINAL_LIBS}")
+    # elseif (UNIX)
+    #     set(MAMBA_FORCE_DYNAMIC_LIBS rt dl resolv)
+    # endif()
+
+    # if (APPLE)
+    #     add_link_options(-static-libstdc++)
+    # elseif (UNIX)
+    #     add_link_options(-static-libstdc++ -static-libgcc)
+    # endif ()
 else ()
     set(MAMBA_DEPENDENCIES_LIBS
         ${LIBSOLV_LIBRARIES}
@@ -248,11 +252,11 @@ endmacro()
 
 set(mamba_targets "")
 
-if (BUILD_SHARED)
-    message(STATUS "BUILDING SHARED")
-    mamba_create_target(mamba SHARED mamba)
-    list(APPEND mamba_targets mamba)
-endif ()
+# if (BUILD_SHARED)
+#     message(STATUS "BUILDING SHARED")
+#     mamba_create_target(mamba SHARED mamba)
+#     list(APPEND mamba_targets mamba)
+# endif ()
 
 if (BUILD_STATIC)
     message(STATUS "BUILDING STATIC")
@@ -283,9 +287,48 @@ if (BUILD_EXE)
     set(MAMBA_EXE
         ${CMAKE_SOURCE_DIR}/src/main.cpp
     )
-
     add_executable(micromamba ${MAMBA_EXE})
-    target_link_libraries(micromamba PUBLIC mamba-static)
+
+    if (MSVC)
+        add_definitions("-DLIBARCHIVE_STATIC -DCURL_STATICLIB")
+        # string(REPLACE "/MD" "/MT" CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_RELEASE)
+        set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
+        include_directories($ENV{CONDA_PREFIX}/Library/include/)
+    endif()
+
+    find_package(LibArchive REQUIRED)
+    find_package(CURL CONFIG REQUIRED)
+    find_package(yaml-cpp CONFIG REQUIRED)
+    find_package(nlohmann_json CONFIG REQUIRED)
+    find_package(LibLZMA CONFIG REQUIRED)
+    find_library(LZ4_LIBRARY NAMES lz4)
+    find_library(LZO2_LIBRARY NAMES lzo2)
+    find_package(zstd CONFIG REQUIRED)
+    find_library(BZIP2_LIBRARIES NAMES bz2)
+
+    if (WIN32)
+        find_library(LIBSOLV_LIBRARIES NAMES solv_static)
+        find_library(LIBSOLVEXT_LIBRARIES NAMES solvext_static)
+    else()
+        find_library(LIBSOLV_LIBRARIES NAMES solv)
+        find_library(LIBSOLVEXT_LIBRARIES NAMES solvext)
+    endif()
+    target_link_libraries(micromamba PRIVATE
+        ${LibArchive_LIBRARY}
+        libzstd
+        ${LZ4_LIBRARY}
+        ${LZO2_LIBRARY}
+        ${BZIP2_LIBRARIES}
+        ${LIBLZMA_LIBRARIES}
+        CURL::libcurl
+        nlohmann_json
+        nlohmann_json::nlohmann_json
+        yaml-cpp
+        mamba-static
+    )
+
+    # target_link_libraries(micromamba PUBLIC )
+
     set_property(TARGET micromamba PROPERTY CXX_STANDARD 17)
 
     install(TARGETS micromamba)
